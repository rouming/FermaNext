<?xml version="1.0"?> 
<project name="PluginManagerTest" default="run-test" basedir="."> 
     <taskdef resource="net/sf/antcontrib/antcontrib.properties"/>
     <taskdef resource="cpptasks.tasks"/> 
     <typedef resource="cpptasks.types"/>

     <property name="src.dir" value="src"/> 
     <property name="outfile" value="PluginManagerTest"/> 
     <property name="objects.dir" value="obj"/>

     <!-- Loaders properties -->
     <property name="loaders.dir" value="loaders"/>
     <property name="loader.extension" value="ldr"/>
     <property name="loader.name" 
               value="NativeLoaderTest"/>
     <property name="loader.outfile" 
               value="${loaders.dir}/${loader.name}.${loader.extension}"/>
     <property name="loader.srcfile" value="${loader.name}.cpp"/>

     <!-- Plugins properties -->
     <property name="plugins.dir" value="plugins"/>
     <property name="plugin.extension" value="plg"/>

     <property name="plugin.name" value="NativePluginTest"/>
     <property name="plugin.outfile" 
               value="${plugins.dir}/${plugin.name}.${plugin.extension}"/>
     <property name="plugin.srcfile" value="${plugin.name}.cpp"/>


     <condition property="is-windows">
         <equals arg1="${os.family}" arg2="windows"/>
     </condition>
     <condition property="is-unix">
         <equals arg1="${os.family}" arg2="unix"/>
     </condition>

     <condition property="os.executable.extension" value=".exe">
         <isset property="is-windows"/>
     </condition>
     <condition property="os.executable.extension" value="">
         <isset property="is-unix"/>
     </condition>

     <mkdir dir="${objects.dir}"/>
     <mkdir dir="${loaders.dir}"/>
     <mkdir dir="${plugins.dir}"/>


      <target name="build-loaders">
          <echo>Build loaders</echo>

          <cc name="${compiler}"
              exceptions="true"
              rtti="true"
              subsystem="console"
              optimize="none"
              multithreaded="true"
              relentless="true"
              debug="false"
              outfile="${loader.outfile}"
              outtype="shared"
              objdir="${objects.dir}">

              <defineset define="QT_THREAD_SUPPORT"/>
              <defineset define="QT_XML_LIB"/>
              <defineset define="QT_CORE_LIB"/>
              <defineset define="QT_NETWORK_LIB"/>

              <!-- Windows define sets -->
              <defineset define="UNICODE" if="is-windows"/>
              <defineset define="WIN32" if="is-windows"/>

              <includepath refid="qt.includes"/>
              <includepath refid="ferma.includes"/>

              <!-- UNIX compiler args -->
              <compilerarg value="-pipe" if="is-unix"/>
              <compilerarg value="-Wall" if="is-unix"/>
 
              <fileset dir="${src.dir}" includes="${loader.srcfile}"/>

              <linker name="${compiler}">
                 <libset libs="Common" dir="../../build/Release"  />

                 <!-- Windows Qt libsets -->
                 <libset libs="QtCore4, QtXml4, QtNetwork4" 
                         dir="${qt.dir}/lib" if="is-windows" />

                 <!-- UNIX Qt libsets -->
                 <libset libs="QtCore, QtXml, QtNetwork" if="is-unix" />

                 <!-- UNIX libsets -->
                 <libset libs="Xext" dir="/usr/X11R6/lib" if="is-unix"/>
                 <libset libs="X11" if="is-unix"/>
                 <libset libs="m" if="is-unix"/>
                 <libset libs="pthread" if="is-unix"/>

             </linker>
         </cc>

      </target>

      <target name="build-plugins">
          <echo>Build plugins</echo>

          <cc name="${compiler}"
              exceptions="true"
              rtti="true"
              subsystem="console"
              optimize="none"
              multithreaded="true"
              relentless="true"
              debug="false"
              outfile="${plugin.outfile}"
              outtype="shared"
              objdir="${objects.dir}">

              <defineset define="QT_THREAD_SUPPORT"/>

              <defineset define="QT_XML_LIB"/>
              <defineset define="QT_CORE_LIB"/>
              <defineset define="QT_NETWORK_LIB"/>

              <!-- Windows define sets -->
              <defineset define="UNICODE" if="is-windows"/>
              <defineset define="WIN32" if="is-windows"/>

              <includepath refid="qt.includes"/>
              <includepath refid="ferma.includes"/>

              <!-- UNIX compiler args -->
              <compilerarg value="-pipe" if="is-unix"/>
              <compilerarg value="-Wall" if="is-unix"/>
 
              <fileset dir="${src.dir}" includes="${plugin.srcfile}"/>

              <linker name="${compiler}">
                 <libset libs="Common" dir="../../build/Release"  />

                 <!-- Windows Qt libsets -->
                 <libset libs="QtCore4, QtXml4, QtNetwork4" 
                         dir="${qt.dir}/lib" if="is-windows" />

                 <!-- UNIX Qt libsets -->
                 <libset libs="QtCore, QtXml, QtNetwork" if="is-unix" />

                 <!-- UNIX libsets -->
                 <libset libs="Xext" dir="/usr/X11R6/lib" if="is-unix"/>
                 <libset libs="X11" if="is-unix"/>
                 <libset libs="m" if="is-unix"/>
                 <libset libs="pthread" if="is-unix"/>

             </linker>
         </cc>

      </target>


      <target name="build-test" depends="build-loaders, build-plugins">
          <echo>Build ${outfile}</echo>

          <cc name="${compiler}"
              exceptions="true"
              rtti="true"
              subsystem="console"
              optimize="none"
              multithreaded="true"
              relentless="true"
              debug="false"
              outfile="${outfile}"
              outtype="executable"
              objdir="${objects.dir}">

              <defineset define="QT_THREAD_SUPPORT"/>
              <defineset define="QT_XML_LIB"/>
              <defineset define="QT_CORE_LIB"/>
              <defineset define="QT_NETWORK_LIB"/>

              <!-- Windows define sets -->
              <defineset define="UNICODE" if="is-windows"/>
              <defineset define="WIN32" if="is-windows"/>

              <includepath refid="qt.includes"/>
              <includepath refid="ferma.includes"/>

              <!-- UNIX compiler args -->
              <compilerarg value="-pipe" if="is-unix"/>
              <compilerarg value="-Wall" if="is-unix"/>
 
              <fileset dir="${src.dir}" includes="PluginManagerTest.cpp"/>

              <linker name="${compiler}">
                 <linkerarg value="-export-dynamic" if="is-unix"/>

                 <libset libs="Common" dir="../../build/Release"  />

                 <!-- Windows Qt libsets -->
                 <libset libs="QtCore4, QtXml4, QtNetwork4" 
                         dir="${qt.dir}/lib" if="is-windows" />

                 <!-- UNIX Qt libsets -->
                 <libset libs="QtCore, QtXml, QtNetwork" if="is-unix" />

                 <!-- UNIX libsets -->
                 <libset libs="Xext" dir="/usr/X11R6/lib" if="is-unix"/>
                 <libset libs="X11" if="is-unix"/>
                 <libset libs="m" if="is-unix"/>
                 <libset libs="pthread" if="is-unix"/>

             </linker>
         </cc>

      </target>

     <target name="run-test" >
         <echo>Executing ${outfile}</echo>
         <exec resolveexecutable="Yes"
               failonerror="Yes"
               executable="${outfile}${os.executable.extension}">
         </exec>
     </target>

     <target name="clean-test" >
        <echo>Clean ${outfile} test</echo>

        <delete dir="${objects.dir}"/>
        <delete dir="${loaders.dir}"/>
        <delete dir="${plugins.dir}"/>
        <delete>
            <fileset dir="." includes="*.pdb"/>
            <fileset dir="." includes="${outfile}${os.executable.extension}"/>
            <fileset dir="." includes="*.xml" excludes="build.xml"/>
        </delete>
     </target>

</project>
